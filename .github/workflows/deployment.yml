name: Deployment

on:
  push:
    branches:
      - master
    paths:
      - .firebase/database-rules.json
      - .firebase/firestore.rules
      - .firebase/storage.rules
      - .github/workflows/deployment.yml
      - firebasejson
      - '*/src/**'
      - '**/package.json'

env:
  APP_NAME: 'Admin App'
  BASE_URL: 'https://admin.feryardiant.id/'
  PROJECT_ID: 'fery-wardiyanto'

jobs:
  deploy:
    runs-on: ubuntu-20.04

    environment:
      name: production
      url: ${{ env.BASE_URL }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: pnpm-cache
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

    - name: Install
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.10.0
        run_install: true

    - name: Build
      env:
        SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
        FIREBASE_APPID: ${{ secrets.FIREBASE_APPID }}
        FIREBASE_APIKEY: ${{ secrets.FIREBASE_APIKEY }}
        FIREBASE_MEASUREMENTID: ${{ secrets.FIREBASE_MEASUREMENTID }}
        FIREBASE_MESSAGINGSENDERID: ${{ secrets.FIREBASE_MESSAGINGSENDERID }}
        RECAPTCHA_SITEKEY: ${{ secrets.RECAPTCHA_SITEKEY }}
        RECAPTCHA_SECRETKEY: ${{ secrets.RECAPTCHA_SECRETKEY }}
      run: pnpm -r build

    - name: Publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: pnpm -r publish --ignore-scripts --no-git-checks --dry-run

    - name: Deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: pnpm deploy -- --project ${{ env.PROJECT_ID }} --token "$FIREBASE_TOKEN"
