name: Deployment

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/deployment.yml
      - firebase/**
      - website/**
      - firebase.json

env:
  APP_NAME: 'Admin App'
  BASE_URL: 'https://admin.feryardiant.id/'
  PROJECT_ID: 'fery-wardiyanto'
  FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/.firebase

jobs:
  deploy:
    runs-on: ubuntu-20.04

    env:
      FIREBASE_APPID: ${{ secrets.FIREBASE_APPID }}
      FIREBASE_APIKEY: ${{ secrets.FIREBASE_APIKEY }}
      FIREBASE_MESSAGINGSENDERID: ${{ secrets.FIREBASE_MESSAGINGSENDERID }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      RECAPTCHA_SITEKEY: ${{ secrets.RECAPTCHA_SITEKEY }}
      RECAPTCHA_SECRETKEY: ${{ secrets.RECAPTCHA_SECRETKEY }}

    environment:
      name: production
      url: ${{ env.BASE_URL }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Node.JS
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Cache Dependencies
      uses: actions/cache@v2
      env:
        cache-name: pnpm-cache
      with:
        path: |
          ${{ env.FIREBASE_EMULATORS_PATH }}
          ${{ github.workspace }}/node_modules
          ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      continue-on-error: true

    - name: Install Dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.10.0
        run_install: true

    - name: Code Quality
      run: |
        pnpm -r lint
        pnpm -r test

    - name: Build Distributions
      run: pnpm -r build

    - name: Publish Packages
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: pnpm -r publish --ignore-scripts --no-git-checks

    - name: Deploy
      run: pnpm deploy -- --project ${{ env.PROJECT_ID }}
